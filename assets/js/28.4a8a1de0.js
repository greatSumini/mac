(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{445:function(s,a,t){"use strict";t.r(a);var e=t(11),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"cli-프로그램"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cli-프로그램"}},[s._v("#")]),s._v(" CLI 프로그램")]),s._v(" "),t("h2",{attrs:{id:"neovim"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#neovim"}},[s._v("#")]),s._v(" neovim")]),s._v(" "),t("custom-image",{attrs:{src:"/imgs/terminal-app/spacevim.png",alt:"SpaceVim"}}),s._v(" "),t("p",[s._v("vim은 기본으로 설치된 터미널용 에디터로 GUI 환경의 에디터를 사용할 수 있는 macOS 환경에서는 일부 고오오급 개발자를 제외하고는 잘 쓰이지 않습니다. 하지만 터미널 작업을 하다 보면 간단하게 수정할 파일이 있고 git 커밋메시지를 작성할 때 종종 사용하게 됩니다.")]),s._v(" "),t("p",[s._v("기본으로 설정된 화면은 밋밋하기 그지 없기 때문에 강력한 기능의 플러그인을 설치해줍니다.")]),s._v(" "),t("p",[t("strong",[s._v("설치")])]),s._v(" "),t("p",[s._v("내장된 vim대신 neovim을 설치합니다. neovim은 vim과 차이가 없어 보이는데 24bit True Color를 지원하고 오래된 vim 소스를 처음부터 다시 짜서 소스코드가 줄었다고 합니다. 저 같은 라이트 유저는 차이를 느끼진 못하지만 좋다고 해서 사용하고 있습니다. 그리고 테마에서 사용할 개발용 폰트를 설치합니다.")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("이미 개발용 폰트가 설치되어 있나요?")]),s._v(" "),t("p",[t("code",[s._v("Powerline10k")]),s._v(" 쉘 프롬프트를 사용하면 개발용 폰트(MesloLGS NF)가 자동으로 설치됩니다. 따로 설치할 필요가 없습니다.")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("brew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" neovim\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# MesloLGS NF가 없는 경우")]),s._v("\nbrew tap homebrew/cask-fonts\nbrew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" font-meslo-lg-nerd-font\n")])])]),t("p",[s._v("기본 설치가 완료되었으면 터미널 기본 에디터로 vi대신 neovim을 사용하도록 "),t("code",[s._v("~/.zshrc")]),s._v("에 다음 항목을 추가합니다.")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("vim")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nvim"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("vi")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nvim"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("vimdiff")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nvim -d"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("EDITOR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/local/bin/nvim "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# M1이면 /opt/homebrew/bin/nvim")]),s._v("\n")])])]),t("p",[t("code",[s._v("source ~/.zshrc")]),s._v("를 입력하여 설정을 다시 불러옵니다.")]),s._v(" "),t("p",[t("strong",[s._v("플러그인")])]),s._v(" "),t("p",[s._v("vim은 강력한 플러그인들이 많은데 설치가 어렵고 어떤 게 좋은지 라이트 유저는 알 수가 없습니다. SpaceVim이라는 프로젝트는 가장 많은 사람들이 사용하는 플러그인을 자동으로 설치해줍니다. 약간 무거운 느낌이 있긴 하지만 설치가 간단하고 화면을 보는 순간 고오오급 개발자의 포스를 만들어주니 바로 설치해봅니다.")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -sLf https://spacevim.org/install.sh "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])])]),t("p",[s._v("설치가 완료되면 "),t("code",[s._v("vi")]),s._v("를 실행합니다. 최초 실행 시 mode 설정을 물어보고 (잘모르면 "),t("code",[s._v("1")]),s._v("을 누릅니다) "),t("code",[s._v("q")]),s._v("를 눌러 종료했다가 다시 실행하면 자동으로 플러그인을 설치합니다. 플러그인이 많아서 시간이 꽤 걸립니다.")]),s._v(" "),t("p",[s._v("기본 테마는 뭔가 칙칙한 느낌이 듭니다. snazzy colorscheme를 다운받고 "),t("code",[s._v("~/.SpaceVim.d/init.toml")]),s._v(" 파일에 설정을 추가합니다.")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" ~/.SpaceVim.d/colors\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" https://gist.githubusercontent.com/subicura/91696d2da58ad28b5e8b2877193015e1/raw/6fb5928c9bda2040b3c9561d1e928231dbcc9184/snazzy-custom.vim -o ~/.SpaceVim.d/colors/snazzy-custom.vim\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('[options]\n  colorscheme = "snazzy-custom"\n  enable_guicolors = true\n  statusline_separator = "arrow"\n  enable_tabline_filetype_icon = true\n  enable_statusline_mode = true\n  statusline_unicode_symbols = true\n')])])]),t("p",[s._v("설정 파일을 수정하고 다시 시작하면 좀 더 나은 화면을 볼 수 있습니다.")]),s._v(" "),t("p",[t("strong",[s._v("폰트")])]),s._v(" "),t("p",[s._v("vi를 실행하고 폰트가 "),t("code",[s._v("?")]),s._v("로 깨져 보인다면 iTerm2에 개발 관련 폰트를 모은 NerdFont를 추가로 설정합니다.")]),s._v(" "),t("custom-image",{attrs:{src:"/imgs/terminal-app/iterm-font.png",alt:"iTerm2 Font"}}),s._v(" "),t("p",[s._v("iTerm2를 실행하고 설정("),t("code",[s._v("⌘")]),s._v(" + "),t("code",[s._v(",")]),s._v(")창에서 "),t("code",[s._v("Profiles")]),s._v(" 항목을 선택하고 "),t("code",[s._v("Text")]),s._v("탭을 선택합니다. Font항목에서 "),t("code",[s._v("Use a different font for non-ASCII text")]),s._v("를 체크하고 MesloLGS NF를 선택하면 폰트가 이쁘게 나옵니다.")]),s._v(" "),t("p",[s._v("이제 설정이 모두 완료되었으니 vim 공부("),t("code",[s._v("esc")]),s._v(", "),t("code",[s._v(":q!")]),s._v(")만 하면 됩니다. 😃")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://neovim.io/",target:"_blank",rel:"noopener noreferrer"}},[s._v("neovim 홈페이지"),t("OutboundLink")],1),s._v(" / "),t("a",{attrs:{href:"https://github.com/SpaceVim/SpaceVim",target:"_blank",rel:"noopener noreferrer"}},[s._v("SpaceVim GitHub"),t("OutboundLink")],1),s._v(" / "),t("a",{attrs:{href:"https://spacevim.org/documentation/",target:"_blank",rel:"noopener noreferrer"}},[s._v("SpaceVim 설정"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"fzf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fzf"}},[s._v("#")]),s._v(" fzf")]),s._v(" "),t("p",[s._v("fzf는 강력하고 엄청나게 빠른 fuzzy finder 도구입니다. 증분 검색을 통하여 원하는 파일이나 히스토리를 쉽고 빠르게 찾을 수 있게 해줍니다. 정확하게 원하는 값을 입력하지 않고 일부만 입력해도 실시간으로 검색 결과를 보여줍니다.")]),s._v(" "),t("custom-image",{attrs:{src:"/imgs/terminal-app/fzf-sample-2.png",alt:"fzf"}}),s._v(" "),t("p",[t("strong",[s._v("설치")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("brew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" fzf\n")])])]),t("p",[s._v("설치가 완료되었으면 "),t("code",[s._v("~/.zshrc")]),s._v("에 plugin을 추가해줍니다.")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("plugins")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n  fzf\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("p",[s._v("전부 완료되었으면 "),t("code",[s._v("source ~/.zshrc")]),s._v("를 입력하여 설정을 다시 불러옵니다.")]),s._v(" "),t("p",[t("strong",[s._v("명령어")])]),s._v(" "),t("p",[s._v("정말 다양한 기능이 있지만 여기선 가장 기본적인 기능만 살펴봅니다.")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("단축키")]),s._v(" "),t("th",[s._v("기능")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[t("code",[s._v("⌃")]),s._v(" + "),t("code",[s._v("T")])]),s._v(" "),t("td",[s._v("하위 디렉토리 파일 검색")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("⌃")]),s._v(" + "),t("code",[s._v("R")])]),s._v(" "),t("td",[s._v("히스토리 검색")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("esc")]),s._v(" + "),t("code",[s._v("C")])]),s._v(" "),t("td",[s._v("하위 디렉토리 검색 후 이동")])])])]),s._v(" "),t("p",[s._v("단축키 입력하고 글자를 몇 개 입력하면 금방 감이 옵니다. 취소는 "),t("code",[s._v("esc")]),s._v("입니다.")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/junegunn/fzf",target:"_blank",rel:"noopener noreferrer"}},[s._v("fzf GitHub"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"fasd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fasd"}},[s._v("#")]),s._v(" fasd")]),s._v(" "),t("p",[s._v("fasd는 사용빈도가 높은 파일 또는 디렉토리 검색을 편하게 해서 생산성을 향상시켜주는 도구입니다. 열어본 파일이나 이동한 디렉토리를 기억하고 우선순위를 정해서 빠르게 검색할 수 있게 도와줍니다.")]),s._v(" "),t("p",[t("strong",[s._v("설치")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("brew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" fasd\n")])])]),t("p",[s._v("설치가 완료되었으면 "),t("code",[s._v("~/.zshrc")]),s._v("에 plugin을 추가해줍니다.")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("plugins=(\n  ...\n  ...\n  fasd\n)\n")])])]),t("p",[s._v("전부 완료되었으면 "),t("code",[s._v("source ~/.zshrc")]),s._v("를 입력하여 설정을 다시 불러옵니다.")]),s._v(" "),t("p",[t("strong",[s._v("명령어")])]),s._v(" "),t("p",[s._v("명령어를 사용하기 위해서는 일단 디렉토리를 좀 이동하고 파일도 열어보고 해야 합니다. 어느 정도 히스토리가 쌓이면 명령어를 입력해봅니다.")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("단축키")]),s._v(" "),t("th",[s._v("기능")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[t("code",[s._v("z")])]),s._v(" "),t("td",[s._v("디렉토리 이동")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("s")])]),s._v(" "),t("td",[s._v("파일 or 디렉토리 검색")])])])]),s._v(" "),t("p",[s._v("디렉토리를 이동할 때 "),t("code",[s._v("z github")]),s._v(", "),t("code",[s._v("tab")]),s._v("과 같이 일부 검색어를 입력하고 tab을 눌러서 이동합니다.")]),s._v(" "),t("p",[s._v("단순한 기능만큼 굉장히 자주, 유용하게 사용하는 도구입니다.")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/clvv/fasd",target:"_blank",rel:"noopener noreferrer"}},[s._v("fasd GitHub"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"asdf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#asdf"}},[s._v("#")]),s._v(" asdf")]),s._v(" "),t("p",[s._v("asdf-vm은 각종 프로그램(nodejs, ruby, python, …)의 버전을 손쉽게 관리해주는 성의 없어 보이는 이름의 도구입니다. 기존에 nvm, rbenv등 언어, 프로그램별로 달랐던 관리 도구를 하나로 통합해서 사용할 수 있습니다. homebrew도 일부 버전 관리 기능을 제공하지만 asdf만큼 강력하지 않습니다.")]),s._v(" "),t("p",[t("strong",[s._v("설치")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("brew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" asdf\n")])])]),t("p",[s._v("설치가 완료되었으면 "),t("code",[s._v("~/.zshrc")]),s._v("에 plugin과 설정을 추가해줍니다.")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("plugins")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n  asdf\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("brew --prefix asdf"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("/libexec/asdf.sh\n")])])]),t("p",[t("strong",[s._v("추가 설정 "),t("Badge",{attrs:{text:"Apple Silicon(M1)"}})],1)]),s._v(" "),t("p",[s._v("Apple Silicon인 경우에, "),t("code",[s._v("x86_64")]),s._v("에서도 asdf를 설치하고 "),t("code",[s._v("~/.zprofile")]),s._v("에 "),t("code",[s._v("ASDF_DATA_DIR")]),s._v(" 설정을 추가합니다.")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("div",{staticClass:"highlight-lines"},[t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("div",{staticClass:"highlighted"},[s._v(" ")]),t("br"),t("br")]),t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CPU")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -m"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$CPU")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"arm64"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("eval")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("/opt/homebrew/bin/brew shellenv"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/homebrew/bin:"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("eval")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("/usr/local/bin/brew shellenv"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ASDF_DATA_DIR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.asdf-x86\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("p",[t("code",[s._v("arm64")]),s._v("와 "),t("code",[s._v("x86_64")]),s._v("를 분리해서 관리할 수 있습니다.")]),s._v(" "),t("p",[s._v("전부 완료되었으면 "),t("code",[s._v("source ~/.zshrc")]),s._v("를 입력하여 설정을 다시 불러옵니다.")]),s._v(" "),t("p",[t("strong",[s._v("명령어")])]),s._v(" "),t("p",[s._v("asdf는 플러그인을 이용하기 때문에 필요한 프로그램을 찾아서 설치해야 합니다.")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("명령어")]),s._v(" "),t("th",[s._v("기능")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[t("code",[s._v("asdf plugin list")])]),s._v(" "),t("td",[s._v("설치된 플러그인 목록")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("asdf plugin add <name> [<git-ref>]")])]),s._v(" "),t("td",[s._v("플러그인 설치 ex) asdf plugin add ruby https://github.com/asdf-vm/asdf-ruby.git")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("asdf list all <name>")])]),s._v(" "),t("td",[s._v("플러그인 설치 가능한 버전 확인")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("asdf install <name> <version>")])]),s._v(" "),t("td",[s._v("플러그인 버전 설치")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("asdf local <name> <version>")])]),s._v(" "),t("td",[s._v("현재 경로 기준 버전 사용 설정")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("asdf global <name> <version>")])]),s._v(" "),t("td",[s._v("전체 버전 사용 설정")])])])]),s._v(" "),t("p",[t("strong",[s._v("Example")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Node.js")]),s._v("\nbrew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" gpg\nasdf plugin "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" nodejs\nasdf plugin "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v("\nasdf "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16.8")]),s._v(".0\nasdf global nodejs "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16.8")]),s._v(".0\n")])])]),t("p",[t("a",{attrs:{href:"https://asdf-vm.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("asdf-vm"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"jq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jq"}},[s._v("#")]),s._v(" jq")]),s._v(" "),t("div",{staticClass:"image-600 no-radius"},[t("custom-image",{attrs:{src:"/imgs/terminal-app/jq.png",alt:"jq"}})],1),s._v(" "),t("p",[s._v("JSON 결과를 이쁘게 보여주고 원하는 대로 편집할 수 있는 도구입니다. 간단하게 필터를 적용하여 원하는 항목만 볼 수 있고 특정 결과를 다른 형태로 변경할 수 있습니다.")]),s._v(" "),t("p",[t("strong",[s._v("설치")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("brew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" jq\n")])])]),t("p",[t("a",{attrs:{href:"https://stedolan.github.io/jq/",target:"_blank",rel:"noopener noreferrer"}},[s._v("jq"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"bat"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bat"}},[s._v("#")]),s._v(" bat")]),s._v(" "),t("div",{staticClass:"image-600 no-radius"},[t("custom-image",{attrs:{src:"/imgs/terminal-app/bat.png",alt:"bat"}})],1),s._v(" "),t("p",[s._v("cat명령어에 코드 하이라이팅 + more 기능이 추가된 버전입니다.")]),s._v(" "),t("p",[t("strong",[s._v("설치")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("brew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" bat\n")])])]),t("p",[s._v("~/.zshrc에 "),t("code",[s._v("cat")]),s._v(" 대신 사용하도록 설정할 수 있습니다.")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("cat")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bat"')]),s._v("\n")])])]),t("p",[s._v("Line Number를 제외하고 출력하고 싶다면 "),t("code",[s._v("-p")]),s._v("(plain) 옵션을 사용하세요.")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/sharkdp/bat",target:"_blank",rel:"noopener noreferrer"}},[s._v("bat"),t("OutboundLink")],1)])],1)}),[],!1,null,null,null);a.default=n.exports}}]);